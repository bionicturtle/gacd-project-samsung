getwd()
install.packages("swirl")
library(swirl)
library("swirl")
install.packages("swirl")
library("swirl")
.libPaths()
swirl()
5+7
x <- 5+7
x
x-3
y <- x-3
y
help
info()
bye()
for (i in 1:10) {
print(i)
}
x <- c("a","b","c","d")
for (i in 1:4) {
print(x[i])
}
z <- 5
while(z >= 3&& z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) { ## random walk
z <- z + 1
} else{
z <- z - 1
}
}
z <- 5
while(z >= 3&& z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) { ## random walk
z <- z + 1
} else{
z <- z - 1
}
}
z <- 5
while(z >= 3&& z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) { ## random walk
z <- z + 1
} else{
z <- z - 1
}
}
z <- 5
while(z >= 3&& z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) { ## random walk
z <- z + 1
} else{
z <- z - 1
}
}
z <- 5
while(z >= 3&& z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) { ## random walk
z <- z + 1
} else{
z <- z - 1
}
}
fomals(rnorm)
?rnorm
formals(rnorm)
?sd
formals(sd)
mydata <- rnorm(100)
sd(mydata)
mydata <- rnorm(100)
sd(mydata)
mydata <- rnorm(100)
sd(mydata)
formals(lm)
args(lm)
?lm
?paste
add2 <- function(x,y){
x + y
}
add2(3,5)
above10 <- function(x) {
x[x >10]
}
above10(8,9,11,13,15,7,4)
above10 <- function(x) {
use <- x>10
x[use]
}
above10(8,9,11,13,15,7,4)
above10 <- function(x) {
use <- x > 10
x[use]
}
above10(8,9,11,13,15,7,4)
x <- 1:20
above10(x)
above10 <- function(x, n) {
use <- x > n
x[use]
}
above10(x)
above10(x,10)
above10(x,11)
a <- numeric(10)
a
search()
f <- function(x,y) {
x^2 + y/z
}
f(3,5)
f(3,1)
z
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
square <- make.power(2)
cube(4)
square(4)
x <- as.Date("2014-03-01")
x
weekdays(x)
months(x)
quarters(x)
?strptime
cube <- function(x,n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
?if
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
install.packages("Quandl")
library(Quandl)
mydata = Quandl("FRED/DTB1YR")
mydata
Quandl.auth("G5xW3q6kgbALQ8L2srWD")
mydata = Quandl("FRED/DFF")
install.packages("RToolls")
install.packages("RTools")
install.packages('RMySQL',type='source')
Sys.getenv("PATH")
R.home()
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages("RMySQL", type="source")
library(RMySQL)
library(RMySQL)
library(RMySQL)
install.packages("RMySQL", type="source")
library(RMySQL)
install.packages("RMySQL", type="source")
library(RMySQL)
install.packages("RMySQL", type="source")
library(RMySQL)
install.packages("RMySQL", type="source")
install.packages("sqldf")
library(sqldf)
install.packages("gsubfn")
library(sqldf)
library(RMySQL)
install.packages("RMySQL", type="source")
install.packages("RMySQL", type="source")
install.packages("RMySQL", type="source")
install.packages("RMySQL", type="source")
install.packages("RMySQL", type="source")
Sys.getenv("MYSQL_HOME")
Sys.getenv("R_HOME")
Sys.getenv("PATH")
install.packages("RMySQL", type="source")
install.packages("RMySQL", type="source")
install.packages("RMySQL", type="source")
install.packages("RMySQL", type="source")
Sys.getenv("MYSQL_HOME")
install.packages("RMySQL", type="source")
Sys.getenv("MYSQL_HOME")
Sys.getenv("MYSQL_HOME")
install.packages("RMySQL", type="source")
library(RMySQL)
library(RMySQL)
library(RMySQL)
library(RMySQL)
Sys.getenv("MYSQL_HOME")
library(RMySQL)
host="genome-mysql.cse.ucsc.edu")
ucscDb <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb);
result
hg19 <- dbConnect(MySQL(),user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
library(rhdf5)
library(XML)
library(RMySQL)
library(RMySQL)
library(httr)
oauth_endpoints("github")
install.packages("Rcpp")
library(Rcpp)
install.packages("httpuv")
install.packages("jsonlite")
library(jsonlite)
install.packages("jsonlite", repos="http://cran.r-project.org")
library(jsonlite)
library(jsonlite)
library(ggvis)
library(jsonlite)
library(jsonlite)
install.packages("jsonlite", repos="http://cran.r-project.org")
install.packages("httpuv")
library(jsonlite)
install.packages("httpuv")
library(httpuv)
install.packages("sqldf")
library(sqldf)
acs <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"")
acs <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
acs
str(acs)
test1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
test1
test1[1:100]
str(test1)
str(acs)
head(acs)
test1 <- sqldf("select pwgtp1,agep from acs where AGEP < 50")
head(test1)
tail(test1)
unique(acs$AGEP)
test2 <- sqldf("select unique * from acs")
test2 <- sqldf("select distinct AGEP from acs")
test2
test2 <- sqldf("select distinct pwgtp1 from acs")
test2
test2 <-  sqldf("select AGEP where unique from acs")
test2 <- sqldf("select distinct pwgtp1 from acs")
head(test2)
test2 <- sqldf("select distinct AGEP from acs")
head(test2)
test2
unique(acs$AGEP)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
con
htmlCode = readLines(con)
htmlCode
str(htmlCode)
head(htmlCode)
htmlCode(10)
htmlCode[10]
htmlCode[1:10]
?nchar
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
setwd("~/dh-school/co/ds/3data/samsung")
fileUrl_train_data <- "./UCI HAR Dataset/train/X_train.txt"
fileUrl_train_subject <- "./UCI HAR Dataset/train/subject_train.txt"
fileUrl_train_activity <- "./UCI HAR Dataset/train/y_train.txt"
fileUrl_test_data <- "./UCI HAR Dataset/test/X_test.txt"
fileUrl_test_subject <- "./UCI HAR Dataset/test/subject_test.txt"
fileUrl_test_activity <- "./UCI HAR Dataset/test/y_test.txt"
fileUrl_features <- "./UCI HAR Dataset/features.txt"
train_data <- read.table(fileUrl_train_data)
fileUrl_train_data <- "./UCI HAR Dataset/train/X_train.txt"
fileUrl_train_subject <- "./UCI HAR Dataset/train/subject_train.txt"
fileUrl_train_activity <- "./UCI HAR Dataset/train/y_train.txt"
fileUrl_test_data <- "./UCI HAR Dataset/test/X_test.txt"
fileUrl_test_subject <- "./UCI HAR Dataset/test/subject_test.txt"
fileUrl_test_activity <- "./UCI HAR Dataset/test/y_test.txt"
fileUrl_features <- "./UCI HAR Dataset/features.txt"
train_data <- read.table(fileUrl_train_data)
train_subject <- read.table(fileUrl_train_subject)
train_activity <- read.table(fileUrl_train_activity)
test_data <- read.table(fileUrl_test_data)
test_subject <- read.table(fileUrl_test_subject)
test_activity <- read.table(fileUrl_test_activity)
?cbind
all_train <- cbind(train_data, train_subject, train_activity)
all_test <- cbind(test_data, test_subject, test_activity)
all_data <- rbind(all_train, all_test)
search()
?sd
features_data <-read.table(fileUrl_features)
colnames(all_data) <- c(as.character(features_data$V2),"subject","activity")
all_data_sub <- all_data[,grepl("mean|std|subject|activity",colnames(all_data))]
View(all_data_sub)
str(all_data_sub)
all_data_sub_MF <- all_data[,grepl("mean|std|subject|activity",colnames(all_data))]
all_data_sub <- all_data_sub_MF[,!grepl("meanFreq",colnames(all_data_sub_MF))]
cdf <- data.frame(a = 1:3, b = c("one", "two", "three"))
cdf
v <- c(1,3,2,2,3,1,1)
v
cdf[v,2]
View(all_data_sub)
all_data_sub <- all_data_sub_MF[,!grepl("meanFreq",colnames(all_data_sub_MF))]
activity_frame <- data.frame(a = 1:6, b=c("walking","walkingupstairs","walkingdownstairs","sitting","standing","laying"))
activity_frame
activity_frame <- data.frame(a = 1:6, b=c("walking","walkingup","walkingdown","sitting","standing","laying"))
activity_frame
activity_frame[all_data_sub$activity, 2]
all_data_sub$activity <- activity_frame[all_data_sub$activity, 2]
View(all_data_sub)
all_data_sub <- all_data_sub_MF[,!grepl("meanFreq",colnames(all_data_sub_MF))]
View(all_data_sub)
all_data_sub <- all_data_sub_MF[,!grepl("meanFreq",colnames(all_data_sub_MF))]
View(all_data_sub)
View(all_data_sub)
all_data_sub$activity <- activity_frame[all_data_sub$activity, 2]
View(all_data_sub)
all_data_sub_MF <- all_data[,grepl("mean|std|subject|activity",colnames(all_data))]
all_data_sub <- all_data_sub_MF[,!grepl("meanFreq",colnames(all_data_sub_MF))]
# Initially did the simplest approach; i.e.,
# all_data$activityDesc[all_data$activity == 1]  <- "Walking" etc
# But below is more elegant: replace activity integers based on activity_frame lookup table
# This achieves Step 3: 3. Uses descriptive activity names to name the activities in the data set
activity_frame <- data.frame(a = 1:6, b=c("walking","walkingup","walkingdown","sitting","standing","laying"))
all_data_sub$activity <- activity_frame[all_data_sub$activity, 2]
all_data_sub_MF <- all_data[,grepl("mean|std|subject|activity",colnames(all_data))]
all_data_sub <- all_data_sub_MF[,!grepl("meanFreq",colnames(all_data_sub_MF))]
# Initially did the simplest approach; i.e.,
# all_data$activityDesc[all_data$activity == 1]  <- "Walking" etc
# But below is more elegant: replace activity integers based on activity_frame lookup table
# This achieves Step 3: 3. Uses descriptive activity names to name the activities in the data set
activity_frame <- data.frame(a = 1:6, b=c("walking","walkingup","walkingdown","sitting","standing","laying"))
all_data_sub$activity <- activity_frame[all_data_sub$activity, 2]
all_data_sub$activity <- activity_frame[all_data_sub$activity, 2]
View(all_data_sub)
all_data_sub_MF <- all_data[,grepl("mean|std|subject|activity",colnames(all_data))]
all_data_sub <- all_data_sub_MF[,!grepl("meanFreq",colnames(all_data_sub_MF))]
View(all_data_sub)
activity_frame <- data.frame(a = 1:6, b=c("walking","walkingup","walkingdown","sitting","standing","laying"))
all_data_sub$activity <- activity_frame[all_data_sub$activity, 2]
View(all_data_sub)
work.1 <- colnames(all_data_sub)
work.1
gsub("-|\\()", "", work.1)
work.2 <- gsub("-|\\()", "", work.1)
?gsub
gsub("mean","Mean", work.2)
colnames(all_datat_sub) <- gsub("-|\\()", "", colnames(all_data_sub))
colnames(all_data_sub) <- gsub("-|\\()", "", colnames(all_data_sub))
View(all_data_sub)
all_data_sub_MF <- all_data[,grepl("mean|std|subject|activity",colnames(all_data))]
all_data_sub <- all_data_sub_MF[,!grepl("meanFreq",colnames(all_data_sub_MF))]
# Initially I used the simplest approach; i.e., all_data$activityDesc[all_data$activity == 1]  <- "Walking" etc
# But I think it's more elegant to replace activity integers using activity_frame as a lookup table
# This achieves Step 3: "Uses descriptive activity names to name the activities in the data set"
activity_frame <- data.frame(a = 1:6, b=c("walking","walkingup","walkingdown","sitting","standing","laying"))
all_data_sub$activity <- activity_frame[all_data_sub$activity, 2]
colnames(all_data_sub) <- gsub("-|\\()", "", colnames(all_data_sub))
View(all_data_sub)
colnames(all_data_sub) <- gsub("mean", "Mean", colnames(all_data_sub))
View(all_data_sub)
colnames(all_data_sub) <- gsub("std", "Std", colnames(all_data_sub))
View(all_data_sub)
str(all_data_sub)
colnames(all_data_sub) <- gsub("BodyBody", "Body", colnames(all_data_sub))
str(all_data_sub)
data_melted <- melt(all_data_sub, id=c("subject","activityDesc"))
library(reshape2)
data_melted <- melt(all_data_sub, id=c("subject","activityDesc"))
data_melted <- melt(all_data_sub, id=c("subject","activity"))
str(data_melted)
head(data_melted)
?melt
tidy_df <- dcast(data_melted, subject+activity ~ variable, mean)
str(tidy_df)
?dcast
View(tidy_df)
source("run_analysis.R")
run_analysis()
tidy_df
?write.table
write.table(tidy_df, file="tidySamsung.txt", row.names=FALSE)
tidy_df
getwd()
run_analysis()
source("run_analysis.R")
run_analysis()
